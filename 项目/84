import os
from PIL import Image
from flask import Flask, request, send_file, jsonify

app = Flask(__name__)

# 设置图片存储目录
UPLOAD_FOLDER = 'images'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# 检查存储目录是否存在，若不存在则创建
if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

# 图片上传接口
@app.route('/upload', methods=['POST'])
def upload():
    # 获取上传的图片文件
    file = request.files['file']

    # 获取文件名并保存图片
    filename = file.filename
    file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))

    return jsonify({'message': '图片上传成功'})

# 图片下载接口
@app.route('/download/<filename>', methods=['GET'])
def download(filename):
    # 构建图片路径
    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)

    # 检查文件是否存在
    if os.path.exists(filepath):
        return send_file(filepath, as_attachment=True)
    else:
        return jsonify({'error': '文件不存在'})

# 图片删除接口
@app.route('/delete/<filename>', methods=['DELETE'])
def delete(filename):
    # 构建图片路径
    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)

    # 检查文件是否存在
    if os.path.exists(filepath):
        # 删除文件
        os.remove(filepath)
        return jsonify({'message': '图片删除成功'})
    else:
        return jsonify({'error': '文件不存在'})

# 列出所有图片接口
@app.route('/list', methods=['GET'])
def list_images():
    # 获取存储目录下所有文件
    files = os.listdir(app.config['UPLOAD_FOLDER'])

    # 返回文件列表
    return jsonify({'files': files})

# 图片缩放接口
@app.route('/resize/<filename>', methods=['PUT'])
def resize(filename):
    # 构建图片路径
    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)

    # 检查文件是否存在
    if os.path.exists(filepath):
        # 获取缩放尺寸参数
        width = int(request.form.get('width'))
        height = int(request.form.get('height'))

        # 打开图片文件
        image = Image.open(filepath)

        # 缩放图片
        resized_image = image.resize((width, height))

        # 保存缩放后的图片
        resized_image.save(filepath)

        return jsonify({'message': '图片缩放成功'})
    else:
        return jsonify({'error': '文件不存在'})

# 图片压缩接口
@app.route('/compress/<filename>', methods=['PUT'])
def compress(filename):
    # 构建图片路径
    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)

    # 检查文件是否存在
    if os.path.exists(filepath):
        # 获取压缩质量参数
        quality = int(request.form.get('quality'))

        # 打开图片文件
        image = Image.open(filepath)

        # 压缩图片
        compressed_image = image.convert('RGB')
        compressed_image.save(filepath, optimize=True, quality=quality)

        return jsonify({'message': '图片压缩成功'})
    else:
        return jsonify({'error': '文件不存在'})

if __name__ == '__main__':
    app.run()
